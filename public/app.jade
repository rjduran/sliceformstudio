.container
	.header
		.btn-group.app-nav
			button#tileView.btn.btn-default.active Edit tiles and patterns
			button#stripView.btn.btn-default Trace and export strips
	#assembleTab.active
		div(style='margin-bottom: 15px;')
			form#tileViewMenu.form-inline(style="margin-left: -10px;")
				.btn-group.padded-btn-group
					a#newDesign.btn.btn-primary #[i.fa.fa-file-o] New
					label#loadFile.btn.btn-primary
						input#loadFileInput(type="file", style="display:none;", accept=".slfm")
						| #[i.fa.fa-folder-open] Open
					a#saveFile.btn.btn-primary #[i.fa.fa-floppy-o] Save
				.btn-group.padded-btn-group
					a.btn.btn-primary.dropdown-toggle(data-toggle="dropdown") #[i.fa.fa-caret-down] Add Tile
					ul.dropdown-menu
						li
							a#addShapeGUI(href="#") Regular polygon (basic)
						li
							a#addShapeText(href="#") Manual text editor (advanced)
					a#delete.btn.btn-primary #[i.fa.fa-trash] Delete
					a#copy.btn.btn-primary #[i.fa.fa-files-o] Copy
					a#clear.btn.btn-primary #[i.fa.fa-times-circle] Clear All
				.btn-group.padded-btn-group#cropContainer.betaFeature.betaHidden
					a#cropDesign.btn.btn-primary #[i.fa.fa-crop] Crop
				.btn-group.padded-btn-group#optimizeContainer
					a#optimizeDesign.btn.btn-primary #[i.fa.fa-crosshairs] Optimize
				.btn-group.padded-btn-group#planarContainer.betaFeature.betaHidden
					input#autoSnap(type="checkbox", checked="true", data-label-text="Planar ", data-label-width=80)
				.btn-group.padded-btn-group#inferContainer.betaFeature.betaHidden
					a#infer.btn.btn-primary Infer
			form#cropViewMenu.form-inline.hidden
				.btn-group.padded-btn-group
					span
						b Select points to define the area to crop your design to.
				.btn-group.padded-btn-group
					input#cropMode(type="checkbox", checked="false", data-label-text="Crop mode", data-label-width=110)
				.btn-group.padded-btn-group
					a#selectAll.btn.btn-primary Select All
					a#unselectAll.btn.btn-primary Reset
				.btn-group.padded-btn-group.pull-right
					a#exitCropView.btn.btn-default #[i.fa.fa-times] Exit Crop View
			form#optimizeViewMenu.form-inline.hidden
				.btn-group.padded-btn-group
					span
						b Add Constraint:
				.btn-group.padded-btn-group.constraint-btns
					a.btn.btn-primary#parallelConstraint Parallel
					a.btn.btn-primary#perpendicularConstraint Perpendicular
					a.btn.btn-primary#collinearConstraint Collinear
					a.btn.btn-primary#equalLengthConstraint Equal length
					a.btn.btn-primary#bisectConstraint Bisect
					.btn-group
						a.btn.btn-primary.dropdown-toggle(data-toggle="dropdown") Others #[i.fa.fa-caret-down]
						ul.dropdown-menu
							li
								a(href="#")#constantGradientConstraint Hold gradient constant
							li
								a(href="#")#constantAngleConstraint Hold meeting angle constant
							li
								a(href="#")#constantLengthConstraint Hold length constant
							li.divider
							li
								a(href="#")#specificGradientConstraint Segment with gradient of ...
							li
								a(href="#")#specificAngleConstraint Meet at angle of ...
							li
								a(href="#")#specificLengthConstraint Segment with length of ...
							li
								a(href="#")#lengthRatioConstraint Lengths in ratio of ...
							li
								a(href="#")#lengthDiffConstraint Lengths differ by ...
				.btn-group.padded-btn-group.pull-right
					a#exitOptimizeView.btn.btn-default #[i.fa.fa-times] Exit Optimize View
		#assembleSvgContainer
			#assembleSvg
				.shadedOverlay(style="visibility: hidden;")
					.innerOverlay
						h2 #[i.fa.fa-exclamation-triangle] There are no tiles to crop.
						p(style="font-size: 20px; text-transform: none; color: black; margin: 20px;") You need to drag tiles onto the canvas first.
				.svg-toolbar#assembleSvgToolbar(style="display: none;")
					.btn-group.padded-btn-group
						a.btn.btn-default.btn-sm(title="Zoom to fit")#traceZoomToFit #[i.fa.fa-fw.fa-arrows-alt]
						a.btn.btn-default.btn-sm(title="Reset zoom level")#traceOrigZoom 1:1
				.svg-instruction-bar#assembleSvgOptimizeBar.hidden
					span.h4
					.btn-group.pull-right.padded-btn-group#nextOptimizeBtnGroup
						a.btn.btn-default.disabled#nextOptimizeBtn Next
					.btn-group.pull-right
						a.btn.btn-default#cancelConstraintBtn Cancel
		div.pull-right
			a.btn.btn-default#betaFeaturesBtn #[i.fa.fa-flask] Beta features
	#traceTab.hidden
		.toolbar
			span
				| Pick a color to assign to strips:#{' '}
			input#spectrum(type='text')
			.btn-group.padded-btn-group.pull-right
				a.btn.btn-primary.dropdown-toggle(data-toggle="dropdown")#exportImageDropdown Export Image #[i.fa.fa-caret-down]
				ul.dropdown-menu#exportPngMenu
					li.divider
					li #[a#exportSvg(href="#") SVG format]
		#traceSvg
			.shadedOverlay(style="visibility: hidden;")
				.innerOverlay
					h2 #[i.fa.fa-exclamation-triangle] There are no strips on the canvas.
					p(style="font-size: 20px; text-transform: none; color: black; margin: 20px;") You need to drag tiles onto the canvas under “Edit tiles and patterns” and add patterns to them via the #[i.fa.fa-cog] buttons first.
			.svg-toolbar#traceSvgToolbar(style="display: none;")
				.btn-group.padded-btn-group
					a.btn.btn-default.btn-sm(title="Zoom to fit")#assembleZoomToFit #[i.fa.fa-fw.fa-arrows-alt]
					a.btn.btn-default.btn-sm(title="Reset zoom level")#assembleOrigZoom 1:1
		.panel.panel-default
			.panel-heading
				h4.panel-title Display parameters
			.panel-body
				form.form-horizontal
					.form-group
						label.control-label.col-xs-2 Strip width
						.col-xs-6
							input#thickness(type='text')
						input#outlineToggle(type="checkbox", checked="true", data-label-text="Draw outline", data-label-width=110)
					.form-group
						label.control-label.col-xs-2 Extension length
						.col-xs-6
							input#extensionLength(type='text')
		#customStripPanel.toolbar.betaFeature.betaHidden
			.panel.panel-default
				.panel-heading
					h4.panel-title #[span JSON strip generation ]
						a(href='docs.html#jsonStripGen', target='_blank') #[i.fa.fa-question-circle.fa-lg]
				#customStrips.panel-body
					form
						.form-group
							label.control-label.col-xs-2 JSON input:
							textarea#customStripJson.col-xs-10(rows='4')
						.form-group
							a#generateCustomStripBtn.btn.btn-default Generate!
		a.hidden#downloadLink
		#tmpSvg.hidden
#downloadStripModal.modal.fade(tabindex='-1', role='dialog')
	.modal-dialog.modal-lg
		.modal-content
			.modal-header
				button.close(type='button', data-dismiss='modal', aria-label='Close')
					span(aria-hidden='true') ×
				h4.modal-title Download cutting template of strips
			.modal-body.scrolled-modal-with-footer
				form.form-horizontal
					.form-group
						label.control-label.col-md-2 Save file as:
						.col-md-6
							input#stripFilename(type='text')
						.col-md-4
							a.pull-right.btn.btn-default#toggleStripSettings Show parameters
				.panel.panel-default.hidden#stripSettings
					.panel-body
						p
							| Specify parameters for the generated paper strip SVG files here. The defaults work well for generic laser cutters, but you can tweak them to your own preferences.
						form.form-horizontal
							.form-group
								label.control-label.col-md-2 Printbed
								.col-md-4.standalone
									input#printWidth(type='text')
									| x
									input#printHeight(type='text')
								label.control-label.col-md-2 Width factor
								.col-md-4#widthFactorDiv
									input#widthFactor(type='text')
							.form-group
								label.control-label.col-md-2 Strip height
								.col-md-4
									input#stripHeight(type='text')
								label.control-label.col-md-2 Vertical spacing
								.col-md-4
									input#interSpacing(type='text')
				#stripCutSvg
			.modal-footer
				a#downloadStripConfirm.btn.btn-primary Download
				button.btn.btn-default(type='button', data-dismiss='modal') Close
#betaFeaturesModal.modal.fade(tabindex='-1', role='dialog')
	.modal-dialog.modal-lg
		.modal-content
			.modal-header
				button.close(type='button', data-dismiss='modal', aria-label='Close')
					span(aria-hidden='true') ×
				h4.modal-title Beta features
			.modal-body
				p
					| Some experimental features are currently in beta. You can enable these features below.
				.alert.alert-danger#betaError(style="display: none;")
				form.form-horizontal
					.form-group
						label.control-label.col-md-3 Pattern inference &nbsp;
							a(href="/docs.html#infer", target="_blank")
								i.fa.fa-question-circle
						.col-md-3
							input#patternInferSwitch(type="checkbox", checked="false")
						label.control-label.col-md-3 Non-planar tiles &nbsp;
							a(href="/docs.html#planar", target="_blank")
								i.fa.fa-question-circle
						.col-md-3
							input#nonPlanarSwitch(type="checkbox", checked="false")
					.form-group
						label.control-label.col-md-3 Pattern cropping &nbsp;
							a(href="/docs.html#planar", target="_blank")
								i.fa.fa-question-circle
						.col-md-3
							input#patternCroppingSwitch(type="checkbox", checked="false")
						label.control-label.col-md-3 JSON strip generation &nbsp;
							a(href="/docs.html#jsonStripGen", target="_blank")
								i.fa.fa-question-circle
						.col-md-3
							input#jsonStripGenSwitch(type="checkbox", checked="false")
			.modal-footer
				button.btn.btn-default(type='button', data-dismiss='modal') Close
#customShapeGUIModal.modal.fade(tabindex='-1', role='dialog')
	.modal-dialog
		.modal-content
			.modal-header
				button.close(type='button', data-dismiss='modal', aria-label='Close')
					span(aria-hidden='true') ×
				h4.modal-title Add a regular polygon
			.modal-body
				div
					#shapeEditSvg
					form.form-horizontal
						.form-group(style="text-align: center;")
							label.control-label.centeredlabel No. of sides:&nbsp;
							input#sideNumber(type='text')
			.modal-footer
				a#addToLineup.btn.btn-primary Add to lineup
				button.btn.btn-default(type='button', data-dismiss='modal') Close
#customShapeTextModal.modal.fade(tabindex='-1', role='dialog')
	.modal-dialog.modal-lg
		.modal-content
			.modal-header
				button.close(type='button', data-dismiss='modal', aria-label='Close')
					span(aria-hidden='true') ×
				h4.modal-title Custom Tile Editor
			.modal-body
				.container-fluid
					p Generate a polygon by specifying arrays of side lengths and interior angles.
					form.form-horizontal
						.form-group
							label.control-label.col-md-2 Side lengths
							.col-md-10
								input#sidelengths.form-control(type='text', placeholder='[1,1,1,1]')
						.form-group
							label.control-label.col-md-2 Interior angles
							.col-md-10
								input#interiorAngles.form-control(type='text', placeholder='[60,120,60,120]')
						.form-group
							.col-md-offset-2.col-md-10
			.modal-footer
				a#addToLineupManual.btn.btn-primary Add to lineup
				button.btn.btn-default(type='button', data-dismiss='modal') Close
#patternModal.modal.fade(tabindex='-1', role='dialog')
	.modal-dialog.modal-lg
		.modal-content
			.modal-header
				button.close(type='button', data-dismiss='modal', aria-label='Close')
					span(aria-hidden='true') ×
				h4.modal-title Pattern Editor
			.modal-body
				.container-fluid
					.row
						.col-md-7
							form.form-horizontal
								.form-group
									label.control-label.col-md-3 Motif
									.col-md-9
										select#patternDropdown.form-control(style="width: 100%")
								#presets
									.form-group
										label#patternLabel1.control-label.col-md-3
										.col-md-9
											input#patternSlider1(type='text')
									.form-group
										label#patternLabel2.control-label.col-md-3
										.col-md-9
											input#patternSlider2(type='text')
								#inferText
									p
										| In this setting, this tile's pattern will be dynamically inferred from its neighbors' on its canvas.
									p To trigger the inference algorithm, click the “Infer” button above.
								#customPattern
									.form-group
										.col-md-offset-3.col-md-9
											a#newCustomPattern.btn.btn-primary Add new pattern
											a#deleteCustomPattern.btn.btn-primary Delete pattern
									.form-group
										label.control-label.col-md-3 Patterns &nbsp;
											a(href="/docs.html#customMultiple", target="_blank")
												i.fa.fa-question-circle
										.col-md-9
											select#customPatternSelect.form-control(multiple='', size='3')
									.form-group
										label.control-label.col-md-3 Degrees of freedom &nbsp;
											a(href="/docs.html#customDof", target="_blank")
												i.fa.fa-question-circle
										.col-md-9
											input#degreesOfFreedom(type='text')
									.form-group
										label.control-label.col-md-3 Edges &nbsp;
											a(href="/docs.html#customEdgeMap", target="_blank")
												i.fa.fa-question-circle
										.col-md-9
											.radio
												label
													input#edgeRadiosAuto(type='radio', name='edgeRadios', value='auto', checked='')
													| Extends from every
													input#patternInterval.form-control.input-small-padded.input-small(value='2', type='text')
													| edge(s) starting from edge
													input#patternStart.form-control.input-small-padded.input-small(value='0', type='text')
													| and spans
													input#patternDepth.form-control.input-small-padded.input-small(value='2', type='text')
													| edges counting clockwise.
											.radio
												label
													input#edgeRadiosManual(type='radio', name='edgeRadios', value='manual')
													| Manual array specification:
													input#manualEdges.form-control(type='text', placeholder='[[1,5],[2,3]]')
									.form-group
										label.control-label.col-md-3 Start offset &nbsp;
											a(href="/docs.html#customOffset", target="_blank")
												i.fa.fa-question-circle
										.col-md-9
											input#startOffset(type='text')
									.form-group
										label.control-label.col-md-3 End offset &nbsp;
											a(href="/docs.html#customOffset", target="_blank")
												i.fa.fa-question-circle
										.col-md-9
											input#endOffset(type='text')
									.form-group
										label.control-label.col-md-3 Symmetry &nbsp;
											a(href="/docs.html#customSymmetry", target="_blank")
												i.fa.fa-question-circle
										.col-md-9
											.radio
												label
													input(type='radio', name='symmetryRadios', value='mirrorCrop', checked='')
													|  Mirror symmetry by extending rays
											.radio
												label
													input(type='radio', name='symmetryRadios', value='mirrorNoCrop')
													|  Mirror symmetry by truncating rays
											.radio
												label
													input(type='radio', name='symmetryRadios', value='noMirror')
													|  No mirror symmetry
						.col-md-5
							#patternEditSvg
							.alert.alert-danger#patternOutsideWarning(style="display: none;") Error: some points of the pattern lie outside the tile.
							.alert.alert-danger#patternOverUnderWarning(style="display: none;") Error: pattern intersections are too close to each other.
			.modal-footer
				a#confirmPattern.btn.btn-primary Confirm
				button.btn.btn-default(type='button', data-dismiss='modal') Close
#newModal.modal.fade(tabindex='-1', role='dialog')
	.modal-dialog.modal-lg(role='document')
		.modal-content
			.modal-header
				button.close(type='button', data-dismiss='modal', aria-label='Close')
					span(aria-hidden='true') ×
				h4.modal-title Initialize your design
			.modal-body.scrolled-modal
				h5 Beginner: regular tiles
				.row-fluid.clearfix#basicTiles
				h5 Intermediate: Regular and filler tiles
				.row-fluid.clearfix#fillerTiles
				h5 Advanced: Almost-regular tiles
				.row-fluid.clearfix#almostRegular
				h5 Advanced: Quasiperiodic tiles
				.row-fluid.clearfix#quasiperiodic
				h5 Custom
				.row-fluid.clearfix
					.col-md-4.padded-col
						.image-frame
							.horiz-centered.responsive-sprites
								img.icon-question(src="images/sprites/starter-sprite.jpg", alt="Custom")
						a#customTile.image-frame.overlap-full(href="#")
							.gradient-overlay
								.gradient-title Custom
.loading-overlay#loading
	.spinner-wrapper1
		.spinner-wrapper2
			.hexdots-loader